{"ast":null,"code":"import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\";\nimport { decode } from \"qss\"; // BET SELECTION\n\nexport var betOpen = function betOpen(data) {\n  return function (dispatch) {\n    var searchParams = decode(data.substring(1));\n    var page = searchParams.page;\n    var maxItems = searchParams.maxItems;\n    dispatch(betLoading());\n    axios.get(\"\".concat(process.env.REACT_APP_URL_START, \"/matches\"), {\n      params: {\n        page: page,\n        maxItems: maxItems\n      }\n    }).then(function (bets) {\n      dispatch(betOpenSuccess(bets.data));\n    }).catch(function (err) {\n      dispatch(betOpenFailed(err.response));\n    });\n  };\n};\nexport var betLoading = function betLoading(bets) {\n  return {\n    type: actionTypes.BET_LOADING,\n    data: bets\n  };\n};\nexport var betOpenSuccess = function betOpenSuccess(bets) {\n  return {\n    type: actionTypes.BET_OPEN_SUCCESS,\n    data: bets\n  };\n};\nexport var betOpenFailed = function betOpenFailed(errors) {\n  return {\n    type: actionTypes.BET_OPEN_FAILED,\n    errors: errors\n  };\n}; // BET ADD\n\nexport var betAdd = function betAdd(betData) {\n  return function (dispatch) {\n    dispatch(betLoading());\n    axios.post(\"\".concat(process.env.REACT_APP_URL_START, \"/bets/add-bet\"), betData).then(function (bet) {\n      dispatch(betAddSuccess(bet.data));\n    }).catch(function (err) {\n      dispatch(betAddFailed(err.response.data));\n    });\n  };\n};\nexport var betAddSuccess = function betAddSuccess(bet) {\n  return {\n    type: actionTypes.BET_ADD_SUCCESS,\n    bet: bet\n  };\n};\nexport var betAddFailed = function betAddFailed(errors) {\n  return {\n    type: actionTypes.BET_ADD_FAILED,\n    errors: errors\n  };\n};","map":{"version":3,"sources":["/www/bolao-cartola/frontend/src/store/actions/bet.js"],"names":["actionTypes","axios","decode","betOpen","data","dispatch","searchParams","substring","page","maxItems","betLoading","get","process","env","REACT_APP_URL_START","params","then","bets","betOpenSuccess","catch","err","betOpenFailed","response","type","BET_LOADING","BET_OPEN_SUCCESS","errors","BET_OPEN_FAILED","betAdd","betData","post","bet","betAddSuccess","betAddFailed","BET_ADD_SUCCESS","BET_ADD_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,KAAvB,C,CAEA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACjB,QAAIC,YAAY,GAAGJ,MAAM,CAACE,IAAI,CAACG,SAAL,CAAe,CAAf,CAAD,CAAzB;AACA,QAAIC,IAAI,GAAGF,YAAY,CAACE,IAAxB;AACA,QAAIC,QAAQ,GAAGH,YAAY,CAACG,QAA5B;AACAJ,IAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AACAT,IAAAA,KAAK,CACFU,GADH,WACUC,OAAO,CAACC,GAAR,CAAYC,mBADtB,eACqD;AACjDC,MAAAA,MAAM,EAAE;AACNP,QAAAA,IAAI,EAAEA,IADA;AAENC,QAAAA,QAAQ,EAAEA;AAFJ;AADyC,KADrD,EAOGO,IAPH,CAOQ,UAAAC,IAAI,EAAI;AACZZ,MAAAA,QAAQ,CAACa,cAAc,CAACD,IAAI,CAACb,IAAN,CAAf,CAAR;AACD,KATH,EAUGe,KAVH,CAUS,UAAAC,GAAG,EAAI;AACZf,MAAAA,QAAQ,CAACgB,aAAa,CAACD,GAAG,CAACE,QAAL,CAAd,CAAR;AACD,KAZH;AAaD,GAlBD;AAmBD,CApBM;AAsBP,OAAO,IAAMZ,UAAU,GAAG,SAAbA,UAAa,CAAAO,IAAI,EAAI;AAChC,SAAO;AACLM,IAAAA,IAAI,EAAEvB,WAAW,CAACwB,WADb;AAELpB,IAAAA,IAAI,EAAEa;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAD,IAAI,EAAI;AACpC,SAAO;AACLM,IAAAA,IAAI,EAAEvB,WAAW,CAACyB,gBADb;AAELrB,IAAAA,IAAI,EAAEa;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAAAK,MAAM,EAAI;AACrC,SAAO;AACLH,IAAAA,IAAI,EAAEvB,WAAW,CAAC2B,eADb;AAELD,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,IAAME,MAAM,GAAG,SAATA,MAAS,CAAAC,OAAO,EAAI;AAC/B,SAAO,UAAAxB,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACK,UAAU,EAAX,CAAR;AACAT,IAAAA,KAAK,CACF6B,IADH,WACWlB,OAAO,CAACC,GAAR,CAAYC,mBADvB,oBAC2De,OAD3D,EAEGb,IAFH,CAEQ,UAAAe,GAAG,EAAI;AACX1B,MAAAA,QAAQ,CAAC2B,aAAa,CAACD,GAAG,CAAC3B,IAAL,CAAd,CAAR;AACD,KAJH,EAKGe,KALH,CAKS,UAAAC,GAAG,EAAI;AACZf,MAAAA,QAAQ,CAAC4B,YAAY,CAACb,GAAG,CAACE,QAAJ,CAAalB,IAAd,CAAb,CAAR;AACD,KAPH;AAQD,GAVD;AAWD,CAZM;AAcP,OAAO,IAAM4B,aAAa,GAAG,SAAhBA,aAAgB,CAAAD,GAAG,EAAI;AAClC,SAAO;AACLR,IAAAA,IAAI,EAAEvB,WAAW,CAACkC,eADb;AAELH,IAAAA,GAAG,EAAEA;AAFA,GAAP;AAID,CALM;AAOP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAP,MAAM,EAAI;AACpC,SAAO;AACLH,IAAAA,IAAI,EAAEvB,WAAW,CAACmC,cADb;AAELT,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID,CALM","sourcesContent":["import * as actionTypes from \"./actionTypes\";\n\nimport axios from \"axios\";\nimport { decode } from \"qss\";\n\n// BET SELECTION\nexport const betOpen = data => {\n  return dispatch => {\n    let searchParams = decode(data.substring(1));\n    let page = searchParams.page;\n    let maxItems = searchParams.maxItems;\n    dispatch(betLoading());\n    axios\n      .get(`${process.env.REACT_APP_URL_START}/matches`, {\n        params: {\n          page: page,\n          maxItems: maxItems\n        }\n      })\n      .then(bets => {\n        dispatch(betOpenSuccess(bets.data));\n      })\n      .catch(err => {\n        dispatch(betOpenFailed(err.response));\n      });\n  };\n};\n\nexport const betLoading = bets => {\n  return {\n    type: actionTypes.BET_LOADING,\n    data: bets\n  };\n};\n\nexport const betOpenSuccess = bets => {\n  return {\n    type: actionTypes.BET_OPEN_SUCCESS,\n    data: bets\n  };\n};\n\nexport const betOpenFailed = errors => {\n  return {\n    type: actionTypes.BET_OPEN_FAILED,\n    errors: errors\n  };\n};\n\n// BET ADD\nexport const betAdd = betData => {\n  return dispatch => {\n    dispatch(betLoading());\n    axios\n      .post(`${process.env.REACT_APP_URL_START}/bets/add-bet`, betData)\n      .then(bet => {\n        dispatch(betAddSuccess(bet.data));\n      })\n      .catch(err => {\n        dispatch(betAddFailed(err.response.data));\n      });\n  };\n};\n\nexport const betAddSuccess = bet => {\n  return {\n    type: actionTypes.BET_ADD_SUCCESS,\n    bet: bet\n  };\n};\n\nexport const betAddFailed = errors => {\n  return {\n    type: actionTypes.BET_ADD_FAILED,\n    errors: errors\n  };\n};\n"]},"metadata":{},"sourceType":"module"}