{"ast":null,"code":"export function encode(obj, pfx) {\n  var k,\n      i,\n      tmp,\n      str = '';\n\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&');\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i]);\n        }\n      } else {\n        str && (str += '&');\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp);\n      }\n    }\n  }\n\n  return (pfx || '') + str;\n}\n\nfunction toValue(mix) {\n  var str = decodeURIComponent(mix);\n  if (str === 'true') return true;\n  if (str === 'false') return false;\n  return +str * 0 === 0 ? +str : str;\n}\n\nexport function decode(str) {\n  var tmp,\n      k,\n      out = {},\n      arr = str.split('&');\n\n  while (tmp = arr.shift()) {\n    tmp = tmp.split('=');\n    k = tmp.shift();\n\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()));\n    } else {\n      out[k] = toValue(tmp.shift());\n    }\n  }\n\n  return out;\n}","map":null,"metadata":{},"sourceType":"module"}