{"ast":null,"code":"import _toConsumableArray from \"/www/bolao-cartola/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/www/bolao-cartola/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"../actions/actionTypes\";\nvar initialState = {\n  loading: false,\n  bets: [],\n  bet: {},\n  errors: {},\n  edited: false,\n  navigation: {}\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.BET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case actionTypes.BET_OPEN_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: false,\n        bets: action.data.matches,\n        navigation: {\n          currentPage: action.data.currentPage,\n          hasNextPage: action.data.hasNextPage,\n          hasPrevPage: action.data.hasPrevPage,\n          nextPage: action.data.nextPage,\n          previousPage: action.data.previousPage,\n          lastPage: action.data.lastPage\n        },\n        errors: {},\n        bet: {},\n        edited: false\n      });\n\n    case actionTypes.BET_OPEN_FAILED:\n      return _objectSpread({}, state, {\n        loading: false,\n        errors: action.errors\n      });\n\n    case actionTypes.BET_ADD_SUCCESS:\n      var oldBets = _toConsumableArray(state.bets).filter(function (bet) {\n        return bet._id !== action.bet._id;\n      });\n\n      return _objectSpread({}, state, {\n        loading: false,\n        bets: oldBets.concat(action.bet),\n        errors: {},\n        edited: true\n      });\n\n    case actionTypes.BET_ADD_FAILED:\n      return _objectSpread({}, state, {\n        loading: false,\n        errors: action.errors\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/www/bolao-cartola/frontend/src/store/reducers/bet.js"],"names":["actionTypes","initialState","loading","bets","bet","errors","edited","navigation","reducer","state","action","type","BET_LOADING","BET_OPEN_SUCCESS","data","matches","currentPage","hasNextPage","hasPrevPage","nextPage","previousPage","lastPage","BET_OPEN_FAILED","BET_ADD_SUCCESS","oldBets","filter","_id","concat","BET_ADD_FAILED"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,GAAG,EAAE,EAHc;AAInBC,EAAAA,MAAM,EAAE,EAJW;AAKnBC,EAAAA,MAAM,EAAE,KALW;AAMnBC,EAAAA,UAAU,EAAE;AANO,CAArB;;AASA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAW,CAACY,WAAjB;AACE,+BACKH,KADL;AAEEP,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKF,WAAW,CAACa,gBAAjB;AACE,+BACKJ,KADL;AAEEP,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,IAAI,EAAEO,MAAM,CAACI,IAAP,CAAYC,OAHpB;AAIER,QAAAA,UAAU,EAAE;AACVS,UAAAA,WAAW,EAAEN,MAAM,CAACI,IAAP,CAAYE,WADf;AAEVC,UAAAA,WAAW,EAAEP,MAAM,CAACI,IAAP,CAAYG,WAFf;AAGVC,UAAAA,WAAW,EAAER,MAAM,CAACI,IAAP,CAAYI,WAHf;AAIVC,UAAAA,QAAQ,EAAET,MAAM,CAACI,IAAP,CAAYK,QAJZ;AAKVC,UAAAA,YAAY,EAAEV,MAAM,CAACI,IAAP,CAAYM,YALhB;AAMVC,UAAAA,QAAQ,EAAEX,MAAM,CAACI,IAAP,CAAYO;AANZ,SAJd;AAYEhB,QAAAA,MAAM,EAAE,EAZV;AAaED,QAAAA,GAAG,EAAE,EAbP;AAcEE,QAAAA,MAAM,EAAE;AAdV;;AAgBF,SAAKN,WAAW,CAACsB,eAAjB;AACE,+BACKb,KADL;AAEEP,QAAAA,OAAO,EAAE,KAFX;AAGEG,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAHjB;;AAKF,SAAKL,WAAW,CAACuB,eAAjB;AACE,UAAMC,OAAO,GAAG,mBAAIf,KAAK,CAACN,IAAV,EAAgBsB,MAAhB,CAAuB,UAAArB,GAAG;AAAA,eAAIA,GAAG,CAACsB,GAAJ,KAAYhB,MAAM,CAACN,GAAP,CAAWsB,GAA3B;AAAA,OAA1B,CAAhB;;AACA,+BACKjB,KADL;AAEEP,QAAAA,OAAO,EAAE,KAFX;AAGEC,QAAAA,IAAI,EAAEqB,OAAO,CAACG,MAAR,CAAejB,MAAM,CAACN,GAAtB,CAHR;AAIEC,QAAAA,MAAM,EAAE,EAJV;AAKEC,QAAAA,MAAM,EAAE;AALV;;AAOF,SAAKN,WAAW,CAAC4B,cAAjB;AACE,+BACKnB,KADL;AAEEP,QAAAA,OAAO,EAAE,KAFX;AAGEG,QAAAA,MAAM,EAAEK,MAAM,CAACL;AAHjB;;AAKF;AACE,aAAOI,KAAP;AA7CJ;AA+CD,CAhDD;;AAkDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  loading: false,\n  bets: [],\n  bet: {},\n  errors: {},\n  edited: false,\n  navigation: {}\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.BET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionTypes.BET_OPEN_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        bets: action.data.matches,\n        navigation: {\n          currentPage: action.data.currentPage,\n          hasNextPage: action.data.hasNextPage,\n          hasPrevPage: action.data.hasPrevPage,\n          nextPage: action.data.nextPage,\n          previousPage: action.data.previousPage,\n          lastPage: action.data.lastPage\n        },\n        errors: {},\n        bet: {},\n        edited: false\n      };\n    case actionTypes.BET_OPEN_FAILED:\n      return {\n        ...state,\n        loading: false,\n        errors: action.errors\n      };\n    case actionTypes.BET_ADD_SUCCESS:\n      const oldBets = [...state.bets].filter(bet => bet._id !== action.bet._id);\n      return {\n        ...state,\n        loading: false,\n        bets: oldBets.concat(action.bet),\n        errors: {},\n        edited: true\n      };\n    case actionTypes.BET_ADD_FAILED:\n      return {\n        ...state,\n        loading: false,\n        errors: action.errors\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}