{"ast":null,"code":"import _classCallCheck from \"/www/bolao-cartola/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/www/bolao-cartola/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/www/bolao-cartola/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/www/bolao-cartola/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/www/bolao-cartola/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/www/bolao-cartola/frontend/src/Components/Layout/SelectGroup/SelectGroup.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../../../store/actions/index\";\nimport classnames from \"classnames\";\nimport style from \"./SelectGroup.module.scss\";\n\nvar SelectGroup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SelectGroup, _Component);\n\n  function SelectGroup() {\n    _classCallCheck(this, SelectGroup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SelectGroup).apply(this, arguments));\n  }\n\n  _createClass(SelectGroup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.closeMatch) {\n        console.log(\"True/False\");\n      } else {\n        this.props.countryOpen(\"?page=1&maxItems=10000\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      this.hasErrors = \"\";\n\n      if (this.props.error) {\n        this.hasErrors = style.hasErrors;\n      } // Label Classes\n\n\n      this.login = \"\";\n      this.form = \"\";\n\n      if (this.props.Labeltype === \"login\") {\n        this.login = style.login;\n      }\n\n      if (this.props.Labeltype === \"form\") {\n        this.form = style.form;\n      } // Tipo de Select (pais ou aberto/fechado)\n\n\n      if (this.props.closeMatch) {\n        if (this.props.selected) {\n          this.options = React.createElement(React.Fragment, null, React.createElement(\"option\", {\n            selected: true,\n            value: \"sim\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, \"Sim\"), React.createElement(\"option\", {\n            value: \"nao\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, \"N\\xE3o\"));\n        } else {\n          this.options = React.createElement(React.Fragment, null, React.createElement(\"option\", {\n            value: \"sim\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, \"Sim\"), React.createElement(\"option\", {\n            selected: true,\n            value: \"nao\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, \"N\\xE3o\"));\n        }\n      } else {\n        this.options = this.props.countries.map(function (country, index) {\n          if (country._id === _this.props.selected) {\n            return React.createElement(\"option\", {\n              selected: true,\n              key: index,\n              value: country._id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, country.name);\n          }\n\n          return React.createElement(\"option\", {\n            key: index,\n            value: country._id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, country.name);\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: style.inputGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: classnames(style.inputs, this.hasErrors),\n        name: this.props.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, this.options), React.createElement(\"label\", {\n        className: classnames(this.login, this.form),\n        htmlFor: this.props.htmlFor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.props.label), this.props.error && React.createElement(\"div\", {\n        className: style.errorMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.props.errosMsg));\n    }\n  }]);\n\n  return SelectGroup;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    countries: state.country.countries\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    countryOpen: function countryOpen(data) {\n      return dispatch(Actions.countryOpen(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectGroup);","map":{"version":3,"sources":["/www/bolao-cartola/frontend/src/Components/Layout/SelectGroup/SelectGroup.jsx"],"names":["React","Component","connect","Actions","classnames","style","SelectGroup","props","closeMatch","console","log","countryOpen","hasErrors","error","login","form","Labeltype","selected","options","countries","map","country","index","_id","name","inputGroup","inputs","htmlFor","label","errorMessage","errosMsg","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as Actions from \"../../../store/actions/index\";\n\nimport classnames from \"classnames\";\n\nimport style from \"./SelectGroup.module.scss\";\n\nclass SelectGroup extends Component {\n  componentDidMount() {\n    if (this.props.closeMatch) {\n      console.log(\"True/False\");\n    } else {\n      this.props.countryOpen(\"?page=1&maxItems=10000\");\n    }\n  }\n\n  render() {\n    this.hasErrors = \"\";\n\n    if (this.props.error) {\n      this.hasErrors = style.hasErrors;\n    }\n\n    // Label Classes\n    this.login = \"\";\n    this.form = \"\";\n\n    if (this.props.Labeltype === \"login\") {\n      this.login = style.login;\n    }\n\n    if (this.props.Labeltype === \"form\") {\n      this.form = style.form;\n    }\n    // Tipo de Select (pais ou aberto/fechado)\n    if (this.props.closeMatch) {\n      if (this.props.selected) {\n        this.options = (\n          <>\n            <option selected value=\"sim\">\n              Sim\n            </option>\n            <option value=\"nao\">Não</option>\n          </>\n        );\n      } else {\n        this.options = (\n          <>\n            <option value=\"sim\">Sim</option>\n            <option selected value=\"nao\">\n              Não\n            </option>\n          </>\n        );\n      }\n    } else {\n      this.options = this.props.countries.map((country, index) => {\n        if (country._id === this.props.selected) {\n          return (\n            <option selected key={index} value={country._id}>\n              {country.name}\n            </option>\n          );\n        }\n        return (\n          <option key={index} value={country._id}>\n            {country.name}\n          </option>\n        );\n      });\n    }\n\n    return (\n      <div className={style.inputGroup}>\n        <select\n          className={classnames(style.inputs, this.hasErrors)}\n          name={this.props.name}\n        >\n          {this.options}\n        </select>\n        <label\n          className={classnames(this.login, this.form)}\n          htmlFor={this.props.htmlFor}\n        >\n          {this.props.label}\n        </label>\n        {this.props.error && (\n          <div className={style.errorMessage}>{this.props.errosMsg}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    countries: state.country.countries\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    countryOpen: data => dispatch(Actions.countryOpen(data))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SelectGroup);\n"]},"metadata":{},"sourceType":"module"}