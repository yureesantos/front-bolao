{"ast":null,"code":"var _jsxFileName = \"/www/bolao-cartola/frontend/src/Components/Layout/InputGroup/InputGroup.jsx\";\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport style from \"./InputGroup.module.scss\";\n\nvar InputGroup = function InputGroup(props) {\n  // Input Classes\n  var hasErrors = \"\";\n  var styleBet = \"\";\n\n  if (props.error) {\n    hasErrors = style.hasErrors;\n  }\n\n  if (props.bet === \"sim\") {\n    styleBet = style.bet;\n  } else {\n    styleBet = style.inputs;\n  } // Label Classes\n\n\n  var login = \"\";\n  var form = \"\";\n\n  if (props.Labeltype === \"login\") {\n    login = style.login;\n  }\n\n  if (props.Labeltype === \"form\") {\n    form = style.form;\n  }\n\n  return React.createElement(\"div\", {\n    className: style.inputGroup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: classnames(hasErrors, styleBet),\n    type: props.type,\n    name: props.name,\n    value: props.value,\n    onChange: props.changed,\n    placeholder: props.label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: classnames(login, form),\n    htmlFor: props.htmlFor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.label), props.error && React.createElement(\"div\", {\n    className: style.errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.errosMsg));\n};\n\nexport default InputGroup;","map":{"version":3,"sources":["/www/bolao-cartola/frontend/src/Components/Layout/InputGroup/InputGroup.jsx"],"names":["React","classnames","style","InputGroup","props","hasErrors","styleBet","error","bet","inputs","login","form","Labeltype","inputGroup","type","name","value","changed","label","htmlFor","errorMessage","errosMsg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC1B;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAIF,KAAK,CAACG,KAAV,EAAiB;AACfF,IAAAA,SAAS,GAAGH,KAAK,CAACG,SAAlB;AACD;;AAED,MAAID,KAAK,CAACI,GAAN,KAAc,KAAlB,EAAyB;AACvBF,IAAAA,QAAQ,GAAGJ,KAAK,CAACM,GAAjB;AACD,GAFD,MAEO;AACLF,IAAAA,QAAQ,GAAGJ,KAAK,CAACO,MAAjB;AACD,GAbyB,CAe1B;;;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;;AAEA,MAAIP,KAAK,CAACQ,SAAN,KAAoB,OAAxB,EAAiC;AAC/BF,IAAAA,KAAK,GAAGR,KAAK,CAACQ,KAAd;AACD;;AAED,MAAIN,KAAK,CAACQ,SAAN,KAAoB,MAAxB,EAAgC;AAC9BD,IAAAA,IAAI,GAAGT,KAAK,CAACS,IAAb;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAET,KAAK,CAACW,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEZ,UAAU,CAACI,SAAD,EAAYC,QAAZ,CADvB;AAEE,IAAA,IAAI,EAAEF,KAAK,CAACU,IAFd;AAGE,IAAA,IAAI,EAAEV,KAAK,CAACW,IAHd;AAIE,IAAA,KAAK,EAAEX,KAAK,CAACY,KAJf;AAKE,IAAA,QAAQ,EAAEZ,KAAK,CAACa,OALlB;AAME,IAAA,WAAW,EAAEb,KAAK,CAACc,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AAAO,IAAA,SAAS,EAAEjB,UAAU,CAACS,KAAD,EAAQC,IAAR,CAA5B;AAA2C,IAAA,OAAO,EAAEP,KAAK,CAACe,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,KAAK,CAACc,KADT,CATF,EAYGd,KAAK,CAACG,KAAN,IACC;AAAK,IAAA,SAAS,EAAEL,KAAK,CAACkB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqChB,KAAK,CAACiB,QAA3C,CAbJ,CADF;AAkBD,CA7CD;;AA+CA,eAAelB,UAAf","sourcesContent":["import React from \"react\";\n\nimport classnames from \"classnames\";\n\nimport style from \"./InputGroup.module.scss\";\n\nconst InputGroup = props => {\n  // Input Classes\n  let hasErrors = \"\";\n  let styleBet = \"\";\n\n  if (props.error) {\n    hasErrors = style.hasErrors;\n  }\n\n  if (props.bet === \"sim\") {\n    styleBet = style.bet;\n  } else {\n    styleBet = style.inputs;\n  }\n\n  // Label Classes\n  let login = \"\";\n  let form = \"\";\n\n  if (props.Labeltype === \"login\") {\n    login = style.login;\n  }\n\n  if (props.Labeltype === \"form\") {\n    form = style.form;\n  }\n\n  return (\n    <div className={style.inputGroup}>\n      <input\n        className={classnames(hasErrors, styleBet)}\n        type={props.type}\n        name={props.name}\n        value={props.value}\n        onChange={props.changed}\n        placeholder={props.label}\n      />\n      <label className={classnames(login, form)} htmlFor={props.htmlFor}>\n        {props.label}\n      </label>\n      {props.error && (\n        <div className={style.errorMessage}>{props.errosMsg}</div>\n      )}\n    </div>\n  );\n};\n\nexport default InputGroup;\n"]},"metadata":{},"sourceType":"module"}